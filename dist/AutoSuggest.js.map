{"version":3,"file":"AutoSuggest.js","sources":["../src/Utilities.js","../src/Constants.js","../src/SuggestionList.js","../src/SuggestionDropdown.js","../src/AutoSuggest.js"],"sourcesContent":["export const ensure = (context, object, keys) => {\r\n    [].concat(keys).forEach(key => {\r\n        if (typeof object[key] === 'undefined') {\r\n            throw new Error(`AutoSuggest: Missing required parameter, ${context}.${key}`);\r\n        }\r\n    });\r\n};\r\nexport const ensureAnyOf = (context, object, keys) => {\r\n    let currentKey;\r\n    if (!keys.some(key => (\r\n        typeof object[currentKey = key] !== 'undefined'\r\n    ))) throw new Error(`AutoSuggest: Missing required parameter, ${context}.${currentKey}`);\r\n};\r\nexport const ensureType = (context, object, key, type) => {\r\n    [].concat(object[key]).forEach(value => {\r\n        const valueType = typeof value;\r\n        if (valueType !== type && valueType !== 'undefined') {\r\n            throw new TypeError(`AutoSuggest: Invalid Type for ${context}.${key}, expected ${type}`);\r\n        }\r\n    });\r\n};\r\n\r\nexport const getComputedStyle = (element, style) =>\r\n    window.getComputedStyle(element).getPropertyValue(style);\r\n\r\nexport const getGlobalOffset = $0 => {\r\n    let node = $0, top = 0, left = 0;\r\n\r\n    do {\r\n        left += node.offsetLeft;\r\n        top += node.offsetTop;\r\n    } while (node = node.offsetParent);\r\n\r\n    return {left, top};\r\n};\r\n\r\nexport const getScrollLeftForInput = input => {\r\n    if (input.createTextRange) {\r\n        const range = input.createTextRange();\r\n        const inputStyle = window.getComputedStyle(input);\r\n        const paddingLeft = parseFloat(inputStyle.paddingLeft);\r\n        const rangeRect = range.getBoundingClientRect();\r\n        return input.getBoundingClientRect().left + input.clientLeft + paddingLeft - rangeRect.left;\r\n    } else {\r\n        return input.scrollLeft;\r\n    }\r\n};\r\n\r\nexport const getCursorPosition = input => {\r\n    return [input.selectionStart, input.selectionEnd].sort((a, b) => a - b);\r\n};\r\n\r\nexport const getSelectedTextNodes = () => {\r\n    const selection = window.getSelection();\r\n    const range = selection.getRangeAt(0);\r\n\r\n    let { startContainer, startOffset, endContainer, endOffset } = range;\r\n    const direction = (\r\n        selection.anchorNode === startContainer &&\r\n        selection.anchorOffset === startOffset\r\n    );\r\n\r\n    if (startContainer.nodeType !== startContainer.TEXT_NODE) {\r\n        startContainer = startContainer.childNodes[startOffset - 1];\r\n        if (startContainer) {\r\n            startContainer = getLastChildNode(startContainer);\r\n            startOffset = startContainer.nodeValue ? startContainer.nodeValue.length : 0;\r\n        }\r\n    }\r\n\r\n    if (endContainer.nodeType !== endContainer.TEXT_NODE) {\r\n        endContainer = endContainer.childNodes[endOffset];\r\n        if (endContainer) {\r\n            endContainer = getFirstChildNode(endContainer);\r\n            endOffset = 0;\r\n        }\r\n    }\r\n\r\n    return { startContainer, startOffset, endContainer, endOffset, direction };\r\n};\r\n\r\nexport const makeAsyncQueueRunner = () => {\r\n    let i = 0;\r\n    let queue = [];\r\n\r\n    return (f, j) => {\r\n        queue[j - i] = f;\r\n        while (queue[0]) ++i, queue.shift()();\r\n    };\r\n};\r\n\r\nexport const data = (element, key, value) => {\r\n    key = 'autosuggest_' + key;\r\n    if (typeof value !== 'undefined') {\r\n        element.dataset[key] = JSON.stringify(value);\r\n    } else {\r\n        value = element.dataset[key];\r\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\r\n    }\r\n};\r\n\r\nexport const createNode = html => {\r\n    var div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstChild; \r\n};\r\n\r\nexport const getFirstChildNode = node => {\r\n    let nextNode = node;\r\n    while (nextNode.firstChild) nextNode = nextNode.firstChild;\r\n    return nextNode;\r\n};\r\n\r\nexport const getLastChildNode = node => {\r\n    let nextNode = node;\r\n    while (nextNode.lastChild) nextNode = nextNode.lastChild;\r\n    return nextNode;\r\n};\r\n","export const CLONE_PROPERTIES = [\r\n    'direction',  // RTL support\r\n    'boxSizing',\r\n    'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\r\n    'height',\r\n    'overflowX',\r\n    'overflowY',  // copy the scrollbar for IE\r\n\r\n    'borderTopWidth',\r\n    'borderRightWidth',\r\n    'borderBottomWidth',\r\n    'borderLeftWidth',\r\n    'borderStyle',\r\n\r\n    'paddingTop',\r\n    'paddingRight',\r\n    'paddingBottom',\r\n    'paddingLeft',\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n    'fontStyle',\r\n    'fontVariant',\r\n    'fontWeight',\r\n    'fontStretch',\r\n    'fontSize',\r\n    'fontSizeAdjust',\r\n    'lineHeight',\r\n    'fontFamily',\r\n\r\n    'textAlign',\r\n    'textTransform',\r\n    'textIndent',\r\n    'textDecoration',  // might not make a difference, but better be safe\r\n\r\n    'letterSpacing',\r\n    'wordSpacing',\r\n\r\n    'tabSize',\r\n    'MozTabSize',\r\n\r\n    'whiteSpace',\r\n    'wordWrap',\r\n    'wordBreak'\r\n];\r\n","import { ensure, ensureType, ensureAnyOf } from './Utilities';\r\n\r\nfunction validateSuggestions (suggestions) {\r\n    return [].concat(suggestions).map(suggestion => {\r\n        const type = typeof suggestion;\r\n        if (type === 'string') {\r\n            suggestion = {\r\n                on: [suggestion],\r\n                show: suggestion,\r\n                insertText: suggestion,\r\n                focusText: [0, 0]\r\n            };\r\n        } else if (type === 'object') {\r\n            try {\r\n                ensure('Suggestion', suggestion, 'value');\r\n            } catch (e) {\r\n                ensure('Suggestion', suggestion, ['on', 'show']);\r\n                ensureAnyOf('Suggestion', suggestion, ['insertHtml', 'insertText']);\r\n            }\r\n\r\n            ensureType('Suggestion', suggestion, 'on', 'string');\r\n            ensureType('Suggestion', suggestion, 'show', 'string');\r\n            ensureType('Suggestion', suggestion, 'value', 'string');\r\n            ensureType('Suggestion', suggestion, 'insertText', 'string');\r\n            ensureType('Suggestion', suggestion, 'insertHtml', 'string');\r\n\r\n            suggestion.show = suggestion.show || suggestion.value;\r\n            suggestion.insertText = suggestion.insertText || suggestion.value;\r\n            suggestion.on = [suggestion.show].concat(suggestion.on || suggestion.value);\r\n\r\n            suggestion.focusText = suggestion.focusText || [0, 0];\r\n            if (suggestion.focusText.constructor !== Array) {\r\n                ensureType('Suggestion', suggestion, 'focusText', 'number');\r\n                suggestion.focusText = [suggestion.focusText, suggestion.focusText];\r\n            }\r\n\r\n            if (suggestion.insertHtml) {\r\n                suggestion.focusHtml = suggestion.focusHtml || [0, 0];\r\n                if (suggestion.focusHtml.constructor !== Array) {\r\n                    ensureType('Suggestion', suggestion, 'focusHtml', 'number');\r\n                    suggestion.focusHtml = [suggestion.focusHtml, suggestion.focusHtml];\r\n                }\r\n            }\r\n        }\r\n\r\n        return suggestion;\r\n    });\r\n}\r\n\r\nfunction escapeRegExp(string) {\r\n    return string.replace(/[.?+*^$[{()|\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n}\r\n\r\nfunction SuggestionList(options) {\r\n    // validate options\r\n    if (options && !options.values) {\r\n        options = { values: options };\r\n    }\r\n\r\n    ensure('SuggestionList', options, 'values');\r\n    ensureType('Suggestion', options, 'trigger', 'string');\r\n    options.caseSensitive = Boolean(options.caseSensitive);\r\n\r\n    if (typeof options.values === 'function') {\r\n        this.getSuggestions = function (keyword, callback) {\r\n            options.values.call(this, keyword, values => callback(validateSuggestions(values)));\r\n        };\r\n    } else if (options.values.constructor === Array || typeof options.values === 'string') {\r\n        options.values = validateSuggestions(options.values);\r\n        this.getSuggestions = (keyword, callback) => {\r\n            const flags = !options.caseSensitive ? 'i' : '';\r\n            const triggerRegex = this.trigger ? `(?:${escapeRegExp(this.trigger)})?` : '';\r\n            const commonRegex = '^' + triggerRegex + escapeRegExp(keyword);\r\n\r\n            const matcher = new RegExp(commonRegex, flags);\r\n            const exactMatcher = new RegExp(commonRegex + '$', flags);\r\n\r\n            callback (\r\n                options.values.filter(value => (\r\n                    value.on.some(entry => (\r\n                        matcher.test(entry) && !exactMatcher.test(entry)\r\n                    ))\r\n                ))\r\n            );\r\n        };\r\n    }\r\n\r\n    this.trigger = options.trigger;\r\n    if (this.trigger) {\r\n        const escapedTrigger = escapeRegExp(this.trigger)\r\n        this.regex = new RegExp(`(?:.*|^)${escapedTrigger}(\\\\S*)$`);\r\n    } else {\r\n        this.regex = new RegExp('(?:^|\\\\s+)(\\\\S+)$');\r\n    }\r\n}\r\n\r\nSuggestionList.prototype.getMatch = function (value) {\r\n    return value.match(this.regex)[1];\r\n};\r\n\r\nexport default SuggestionList;\r\n","import { data, createNode } from './Utilities';\r\n\r\nclass SuggestionDropdown {\r\n    constructor() {\r\n        this.width = 0;\r\n        this.isEmpty = true;\r\n        this.isActive = false;\r\n\r\n        this.dropdownContent = document.createElement('ul');\r\n        this.dropdownContent.className = 'dropdown-menu dropdown-menu-left';\r\n\r\n        this.dropdown = document.createElement('div');\r\n        this.dropdown.className = 'autosuggest-dropdown dropdown open';\r\n        this.dropdown.style.position = 'absolute';\r\n\r\n        this.hide();\r\n        this.dropdown.appendChild(this.dropdownContent);\r\n        document.body.appendChild(this.dropdown);\r\n    }\r\n\r\n    show(position) {\r\n        if (position) {\r\n            this.dropdown.style.left = `${position.left}px`;\r\n            this.dropdown.style.top = `${position.top}px`;\r\n\r\n            if ((position.left + this.width) > document.body.offsetWidth) {\r\n                this.dropdownContent.classList.remove('dropdown-menu-left');\r\n                this.dropdownContent.classList.add('dropdown-menu-right');\r\n            } else {\r\n                this.dropdownContent.classList.remove('dropdown-menu-right');\r\n                this.dropdownContent.classList.add('dropdown-menu-left');\r\n            }\r\n\r\n            if ((position.top + this.height) > document.body.offsetHeight) {\r\n                this.dropdown.classList.add('dropup');\r\n            } else {\r\n                this.dropdown.classList.remove('dropup');\r\n            }\r\n        }\r\n\r\n        this.dropdown.style.display = 'block';\r\n        this.isActive = true;\r\n    }\r\n\r\n    hide() {\r\n        this.dropdown.style.display = 'none';\r\n        this.isActive = false;\r\n    }\r\n\r\n    empty() {\r\n        this.dropdownContent.innerHTML = '';\r\n        this.isEmpty = true;\r\n    }\r\n\r\n    fill(suggestions, onSet) {\r\n        this.empty();\r\n        suggestions.forEach(suggestion => {\r\n            const dropdownLink = createNode(`<li><a>${suggestion.show}</a></li>`);\r\n            this.dropdownContent.appendChild(dropdownLink);\r\n            data(dropdownLink, 'suggestion', suggestion);\r\n\r\n            dropdownLink.addEventListener('mouseenter', () => {\r\n                this.getActive().classList.remove('active');\r\n                dropdownLink.classList.add('active');\r\n            });\r\n\r\n            dropdownLink.addEventListener('mousedown', (e) => {\r\n                onSet(suggestion);\r\n                this.hide();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        });\r\n\r\n        // Calculate width\r\n        if (!this.isActive) {\r\n            this.show();\r\n        }\r\n\r\n        this.width = this.dropdownContent.offsetWidth;\r\n        this.height = this.dropdownContent.offsetHeight;\r\n\r\n        if (!this.isActive) {\r\n            this.hide();\r\n        }\r\n\r\n        this.setActive();\r\n        this.isEmpty = false;\r\n    }\r\n\r\n    showLoader(position) {\r\n        this.empty();\r\n        this.dropdownContent.innerHTML = '<div class=\"loadingio-spinner-ellipsis-310hp0rq6j8\" style=\"position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%);\"><div class=\"ldio-l4tfk0smiup\"><div></div><div></div><div></div><div></div><div></div></div></div>';\r\n        this.show(position);\r\n        this.isActive = false;\r\n    }\r\n\r\n    getActive() {\r\n        const activeLinks = Array.prototype.slice.call(this.dropdownContent.querySelectorAll('li.active'), 0);\r\n        while (activeLinks[1]) {\r\n            activeLinks.pop().classList.remove('active');\r\n        }\r\n\r\n        return activeLinks[0];\r\n    }\r\n\r\n    getValue(element) {\r\n        return data((element || this.getActive()), 'suggestion');\r\n    }\r\n\r\n    setActive(element = this.dropdownContent.firstElementChild, activeLink) {\r\n        activeLink && activeLink.classList.remove('active');\r\n        element.classList.add('active');\r\n    }\r\n\r\n    selectNext() {\r\n        const activeLink = this.getActive();\r\n        const nextLink = activeLink.nextElementSibling || this.dropdownContent.firstElementChild;\r\n        this.setActive(nextLink, activeLink);\r\n    }\r\n\r\n    selectPrev() {\r\n        const activeLink = this.getActive();\r\n        const prevLink = activeLink.previousElementSibling || this.dropdownContent.lastElementChild;\r\n        this.setActive(prevLink, activeLink);\r\n    }\r\n}\r\n\r\nexport default SuggestionDropdown;\r\n","import {\r\n    data,\r\n    getGlobalOffset,\r\n    getCursorPosition,\r\n    getScrollLeftForInput,\r\n    makeAsyncQueueRunner,\r\n    getSelectedTextNodes,\r\n    getComputedStyle,\r\n    getFirstChildNode\r\n} from './Utilities';\r\nimport {\r\n    CLONE_PROPERTIES\r\n} from './Constants';\r\n\r\nimport SuggestionList from './SuggestionList';\r\nimport SuggestionDropdown from './SuggestionDropdown';\r\n\r\nfunction splitValue(originalValue, cursorPosition, trigger) {\r\n    const value = originalValue.slice(0, cursorPosition);\r\n    let textAfterTrigger = value.split(trigger || /\\W/).pop();\r\n    const textUptoTrigger = textAfterTrigger.length ? value.slice(0, 0 - textAfterTrigger.length) : value;\r\n    textAfterTrigger += originalValue.slice(cursorPosition);\r\n    return { textAfterTrigger, textUptoTrigger };\r\n}\r\n\r\nfunction getCharHeight(...elements) {\r\n    return Math.max(...elements.map(element => (\r\n        parseFloat(getComputedStyle(element, 'line-height'))\r\n    )));\r\n}\r\n\r\n// Invisible character\r\nconst POSITIONER_CHARACTER = \"\\ufeff\";\r\nfunction getCaretPosition(element, trigger) {\r\n    if (data(element, 'isInput')) {\r\n        const [cursorPosition] = getCursorPosition(element);\r\n        const { textAfterTrigger, textUptoTrigger } = splitValue(element.value, cursorPosition, trigger);\r\n\r\n        // pre to retain special characters\r\n        const clone = document.createElement('pre');\r\n        clone.id = 'autosuggest-positionclone';\r\n\r\n        const positioner = document.createElement('span');\r\n        positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\r\n\r\n        const computed = window.getComputedStyle(element);\r\n        CLONE_PROPERTIES.forEach(prop => {\r\n            clone.style[prop] = computed[prop];\r\n        });\r\n\r\n        const elementPosition = getGlobalOffset(element);\r\n        clone.style.opacity = 0;\r\n        clone.style.position = 'absolute';\r\n        clone.style.top = `${elementPosition.top}px`;\r\n        clone.style.left = `${elementPosition.left}px`;\r\n        document.body.appendChild(clone);\r\n\r\n        if (element.scrollHeight > parseInt(computed.height)) {\r\n            clone.style.overflowY = 'scroll';\r\n        } else {\r\n            clone.style.overflow = 'hidden';\r\n        }\r\n\r\n        // Extra styles for the clone depending on type of input\r\n        let charHeight;\r\n        if (element.tagName === 'INPUT') {\r\n            clone.appendChild(document.createTextNode(textUptoTrigger.replace(/ /g, '\\u00A0')));\r\n            clone.appendChild(positioner);\r\n            clone.appendChild(document.createTextNode(textAfterTrigger.replace(/ /g, '\\u00A0')));\r\n\r\n            clone.style.overflowX = 'auto';\r\n            clone.style.whiteSpace = 'nowrap';\r\n            if (cursorPosition === element.value.length) {\r\n                clone.scrollLeft = clone.scrollWidth - clone.clientWidth;\r\n            } else {\r\n                clone.scrollLeft = Math.min(getScrollLeftForInput(element), clone.scrollWidth - clone.clientWidth);\r\n            }\r\n            charHeight = clone.offsetHeight - parseFloat(computed.paddingTop) - parseFloat(computed.paddingBottom);\r\n        } else {\r\n            clone.appendChild(document.createTextNode(textUptoTrigger));\r\n            clone.appendChild(positioner);\r\n            clone.appendChild(document.createTextNode(textAfterTrigger));\r\n\r\n            clone.style.maxWidth = '100%';\r\n            clone.scrollTop = element.scrollTop;\r\n            clone.scrollLeft = element.scrollLeft;\r\n            charHeight = getCharHeight(clone, positioner);\r\n        }\r\n\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        const inputPosition = getGlobalOffset(element);\r\n\r\n        caretPosition.top += charHeight - clone.scrollTop;\r\n        caretPosition.left -= clone.scrollLeft;\r\n\r\n        const diff = caretPosition.left - inputPosition.left;\r\n        if (diff < 0 || diff > element.clientWidth)\r\n            caretPosition.left = inputPosition.left;\r\n\r\n        document.body.removeChild(clone);\r\n        return caretPosition;\r\n    } else {\r\n        const { startContainer, startOffset, endContainer, endOffset } = window.getSelection().getRangeAt(0);\r\n        const { startContainer: containerTextNode, startOffset: cursorPosition, direction } = getSelectedTextNodes();\r\n        const { textAfterTrigger, textUptoTrigger } = splitValue(containerTextNode.nodeValue, cursorPosition, trigger);\r\n\r\n        const parentNode = containerTextNode.parentNode;\r\n        const referenceNode = containerTextNode.nextSibling;\r\n\r\n        const positioner = document.createElement(\"span\");\r\n        positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\r\n        parentNode.insertBefore(positioner, referenceNode);\r\n\r\n        if (textAfterTrigger) {\r\n            containerTextNode.nodeValue = textUptoTrigger;\r\n            const remainingTextNode = document.createTextNode(textAfterTrigger);\r\n            parentNode.insertBefore(remainingTextNode, referenceNode);\r\n        }\r\n\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        const charHeight = getCharHeight(positioner);\r\n        caretPosition.top += charHeight;\r\n\r\n        // Reset DOM to the state before changes\r\n        parentNode.removeChild(positioner);\r\n        if (textAfterTrigger) {\r\n            parentNode.removeChild(containerTextNode.nextSibling);\r\n            containerTextNode.nodeValue = textUptoTrigger + textAfterTrigger;\r\n        }\r\n\r\n        const selection = window.getSelection();\r\n        if (selection.setBaseAndExtent) {\r\n            if (direction) {\r\n                selection.setBaseAndExtent(startContainer, startOffset, endContainer, endOffset);\r\n            } else {\r\n                selection.setBaseAndExtent(endContainer, endOffset, startContainer, startOffset);\r\n            }\r\n        } else {\r\n            const range = document.createRange();\r\n            range.setStart(startContainer, startOffset);\r\n            range.setEnd(endContainer, endOffset);\r\n            selection.removeAllRanges();\r\n            selection.addRange(range)\r\n        }\r\n\r\n        return caretPosition;\r\n    }\r\n}\r\n\r\nconst getNextNode = (node, root) => {\r\n    let nextNode;\r\n    if (node.nextSibling)\r\n        nextNode = node.nextSibling;\r\n    else {\r\n        nextNode = node.parentNode;\r\n        while (nextNode && nextNode !== root && !nextNode.nextSibling)\r\n            nextNode = nextNode.parentNode;\r\n        if (nextNode && nextNode !== root)\r\n            nextNode = nextNode.nextSibling\r\n        else return;\r\n    }\r\n\r\n    return getFirstChildNode(nextNode);\r\n};\r\n\r\nconst removeNodesBetween = (startContainer, endContainer) => {\r\n    if (startContainer === endContainer) return;\r\n    let node = getNextNode(startContainer);\r\n    while (node !== endContainer) {\r\n        node.parentNode.removeChild(node);\r\n        node = getNextNode(startContainer);\r\n    }\r\n};\r\n\r\nconst insertHtmlAfter = (node, html) => {\r\n    const psuedoDom = document.createElement('div');\r\n    psuedoDom.innerHTML = html;\r\n\r\n    const referenceNode = node.nextSibling;\r\n    const appendedNodes = [];\r\n    while (psuedoDom.firstChild) {\r\n        appendedNodes.push(psuedoDom.firstChild);\r\n        node.parentNode.insertBefore(psuedoDom.firstChild, referenceNode);\r\n    }\r\n\r\n    return appendedNodes;\r\n};\r\n\r\nconst setValue = ({ element, trigger, suggestion, onChange }) => {\r\n    if (data(element, 'isInput')) {\r\n        const [startPosition, endPosition] = getCursorPosition(element);\r\n        const originalValue = element.value;\r\n\r\n        let value = originalValue.slice(0, startPosition);\r\n        const currentValue = value.split(trigger || /\\W/).pop();\r\n        if (trigger) {\r\n            value = value.slice(0, 0 - currentValue.length - (trigger || '').length) + trigger + (suggestion.insertText || suggestion.insertHtml);\r\n        } else {\r\n            value = value.slice(0, 0 - currentValue.length - (trigger || '').length) + (suggestion.insertText || suggestion.insertHtml);\r\n        }\r\n        element.value = value + originalValue.slice(endPosition);\r\n        element.focus();\r\n\r\n        const focus = suggestion.insertText ? suggestion.focusText : [0, 0];\r\n        const cursorStartPosition = value.length;\r\n        element.setSelectionRange(cursorStartPosition + focus[0], cursorStartPosition + focus[1]);\r\n    } else {\r\n        const { startContainer, startOffset, endContainer, endOffset } = getSelectedTextNodes();\r\n        const selection = window.getSelection();\r\n        const range = document.createRange();\r\n\r\n        let preValue = startContainer.nodeValue.slice(0, startOffset);\r\n        const replaceValue = preValue.split(trigger || /\\W/).pop();\r\n        preValue = preValue.slice(0, 0 - replaceValue.length - (trigger || '').length);\r\n\r\n        if (startContainer !== endContainer) {\r\n            startContainer.nodeValue = preValue;\r\n            removeNodesBetween(startContainer, endContainer);\r\n            if (endContainer.nodeValue) {\r\n                endContainer.nodeValue = endContainer.nodeValue.slice(endOffset);\r\n            }\r\n        } else {\r\n            const remainingText = startContainer.nodeValue.slice(endOffset);\r\n            if (remainingText) {\r\n                const remainingTextNode = document.createTextNode(remainingText);\r\n                startContainer.parentNode.insertBefore(remainingTextNode, startContainer.nextSibling);\r\n            }\r\n            startContainer.nodeValue = preValue;\r\n        }\r\n\r\n        if (suggestion.insertHtml) {\r\n            const nodes = insertHtmlAfter(startContainer, suggestion.insertHtml);\r\n            const focus = nodes.length ? suggestion.focusHtml : [0, 0];\r\n\r\n            function setSelection(focus, nodes, method) {\r\n                let lastNode, lastFocus = focus;\r\n                if (lastFocus !== 0) {\r\n                    do {\r\n                        lastNode = nodes.pop();\r\n                        lastFocus += lastNode.textContent.length;\r\n                    } while(nodes.length && lastFocus < 0);\r\n\r\n                    if (!lastNode) {\r\n                        throw new TypeError(`AutoSuggest: Invalid value provided for Suggestion.focusHtml`);\r\n                    };\r\n                }\r\n\r\n                if (lastFocus === 0) {\r\n                    range[method + 'After'](nodes[nodes.length - 1] || startContainer);\r\n                } else {\r\n                    if (lastNode.nodeType === lastNode.TEXT_NODE) {\r\n                        range[method](lastNode, lastFocus);\r\n                    } else {\r\n                        setSelection(\r\n                            lastFocus - lastNode.textContent.length,\r\n                            Array.prototype.slice.call(lastNode.childNodes, 0),\r\n                            method\r\n                        );\r\n                    }\r\n                }\r\n            };\r\n\r\n            setSelection(focus[1], [...nodes], 'setEnd');\r\n            setSelection(focus[0], [...nodes], 'setStart');\r\n        } else {\r\n            startContainer.nodeValue += suggestion.insertText;\r\n            const focus = suggestion.focusText;\r\n            const cursorStartPosition = startContainer.nodeValue.length;\r\n\r\n            range.setStart(startContainer, cursorStartPosition + focus[0]);\r\n            range.setEnd(startContainer, cursorStartPosition + focus[1]);\r\n        }\r\n\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    onChange(suggestion);\r\n};\r\n\r\nclass AutoSuggest {\r\n    constructor(options, ...inputs) {\r\n        if (!options) {\r\n            throw new Error(`AutoSuggest: Missing required parameter, options`);\r\n        }\r\n\r\n        this.inputs = [];\r\n        this.dropdown = new SuggestionDropdown();\r\n        this.onChange = options.onChange || Function.prototype;\r\n        this.maxSuggestions = options.maxSuggestions || 10;\r\n\r\n        // validate suggestions\r\n        this.suggestionLists = options.suggestions || [];\r\n        for (let i = 0; i < this.suggestionLists.length; i++) {\r\n            let suggestionList = this.suggestionLists[i];\r\n            if (!(suggestionList instanceof SuggestionList)) {\r\n                if (suggestionList.constructor !== Object) {\r\n                    suggestionList = { values: suggestionList };\r\n                }\r\n\r\n                if (!suggestionList.hasOwnProperty('caseSensitive') && options.hasOwnProperty('caseSensitive')) {\r\n                    suggestionList.caseSensitive = options.caseSensitive;\r\n                }\r\n\r\n                this.suggestionLists[i] = new SuggestionList(suggestionList);\r\n            }\r\n        }\r\n\r\n        events: {\r\n            const self = this;\r\n            let activeSuggestionList = null;\r\n            let handledInKeyDown = false;\r\n            let previousValue = self.value;\r\n\r\n            this.onBlurHandler = function() {\r\n                self.dropdown.hide();\r\n            };\r\n\r\n            this.onKeyDownHandler = function(e) {\r\n                if (self.dropdown.isActive) {\r\n                    const preventDefaultAction = () => {\r\n                        e.preventDefault();\r\n                        handledInKeyDown = true;\r\n                    };\r\n\r\n                    if (e.keyCode === 13 || e.keyCode === 9) {\r\n                        setValue({\r\n                            element: this,\r\n                            trigger: activeSuggestionList.trigger,\r\n                            suggestion: self.dropdown.getValue(),\r\n                            onChange: self.onChange.bind(this)\r\n                        });\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 40) {\r\n                        self.dropdown.selectNext();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 38) {\r\n                        self.dropdown.selectPrev();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 27) {\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    }\r\n                }\r\n            };\r\n\r\n            let keyUpIndex = 0;\r\n            this.onKeyUpHandler = function(e) {\r\n                if (handledInKeyDown) {\r\n                    handledInKeyDown = false;\r\n                    return;\r\n                }\r\n\r\n                if (this.value == previousValue) {\r\n                    return;\r\n                }\r\n                previousValue = this.value;\r\n\r\n                let value;\r\n                if (data(this, 'isInput')) {\r\n                    const [startPosition, endPosition] = getCursorPosition(this);\r\n                    if (/\\w/.test(this.value.charAt(endPosition) || ' ')) {\r\n                        self.dropdown.hide();\r\n                        return;\r\n                    }\r\n\r\n                    value = this.value.slice(0, startPosition);\r\n                } else {\r\n                    const { startContainer, startOffset, endContainer, endOffset } = getSelectedTextNodes();\r\n                    if (!startContainer || !endContainer || !startContainer.nodeValue ||\r\n                        /\\w/.test((endContainer.nodeValue || '').charAt(endOffset) || ' ')) {\r\n                        self.dropdown.hide();\r\n                        return;\r\n                    }\r\n\r\n                    value = startContainer.nodeValue.slice(0, startOffset);\r\n                }\r\n\r\n                handleDropdown: {\r\n                    keyUpIndex++;\r\n                    self.dropdown.empty();\r\n\r\n                    const executeQueue = makeAsyncQueueRunner();\r\n                    let i = 0, timer, triggerMatchFound = false;\r\n                    self.suggestionLists.forEach(suggestionList => {\r\n                        if (suggestionList.regex.test(value)) {\r\n                            triggerMatchFound = true;\r\n\r\n                            ((i, asyncReference) => {\r\n                                const match = suggestionList.getMatch(value);\r\n                                const caretPosition = getCaretPosition(this, suggestionList.trigger);\r\n\r\n                                if (self.dropdown.isEmpty) {\r\n                                    timer && clearTimeout(timer);\r\n                                    timer = setTimeout(() => {\r\n                                        self.dropdown.showLoader(caretPosition);\r\n                                    }, 0);\r\n                                }\r\n\r\n                                suggestionList.getSuggestions.call(this, match, results => {\r\n                                    if (asyncReference !== keyUpIndex) return;\r\n\r\n                                    executeQueue(() => {\r\n                                        timer && clearTimeout(timer);\r\n                                        if (self.dropdown.isEmpty) {\r\n                                            if (results.length) {\r\n                                                activeSuggestionList = suggestionList;\r\n                                                self.dropdown.fill(\r\n                                                    results.slice(0, self.maxSuggestions),\r\n                                                    suggestion => {\r\n                                                        setValue({\r\n                                                            element: this,\r\n                                                            trigger: suggestionList.trigger,\r\n                                                            suggestion: suggestion,\r\n                                                            onChange: self.onChange.bind(this)\r\n                                                        });\r\n                                                    }\r\n                                                );\r\n\r\n                                                self.dropdown.show(caretPosition);\r\n                                            } else {\r\n                                                self.dropdown.hide();\r\n                                            }\r\n                                        }\r\n                                    }, i);\r\n                                });\r\n                            })(i++, keyUpIndex);\r\n                        }\r\n                    });\r\n\r\n                    if (!triggerMatchFound) {\r\n                        self.dropdown.hide();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        // initialize events on inputs\r\n        this.addInputs(...inputs);\r\n    }\r\n\r\n    addInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            // validate element\r\n            if (input.tagName === 'TEXTAREA' || (input.tagName === 'INPUT' && input.type === 'text') || (input.tagName === 'INPUT' && input.type === 'email')) {\r\n                data(input, 'isInput', true)\r\n            } else if (input.isContentEditable) {\r\n                data(input, 'isInput', false)\r\n            } else {\r\n                throw new Error('AutoSuggest: Invalid input: only input[type = text], textarea and contenteditable elements are supported');\r\n            }\r\n\r\n            // init events\r\n            input.addEventListener('blur', this.onBlurHandler);\r\n            input.addEventListener('keyup', this.onKeyUpHandler);\r\n            input.addEventListener('mouseup', this.onKeyUpHandler);\r\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\r\n\r\n            data(input, 'index', this.inputs.push(input) - 1);\r\n        });\r\n    }\r\n\r\n    removeInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            const index = data(input, 'index');\r\n            if (!isNaN(index)) {\r\n                this.inputs.splice(index, 1);\r\n\r\n                // destroy events\r\n                input.removeEventListener('blur', this.onBlurHandler);\r\n                input.removeEventListener('keyup', this.onKeyUpHandler);\r\n                input.removeEventListener('mouseup', this.onKeyUpHandler);\r\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.removeInputs(this.inputs);\r\n    }\r\n}\r\n\r\nexport default AutoSuggest;\r\n"],"names":["ensure","context","object","keys","concat","forEach","key","Error","ensureAnyOf","currentKey","some","ensureType","type","valueType","value","TypeError","getComputedStyle","element","style","window","getPropertyValue","getGlobalOffset","node","$0","top","left","offsetLeft","offsetTop","offsetParent","getScrollLeftForInput","input","createTextRange","range","inputStyle","paddingLeft","parseFloat","rangeRect","getBoundingClientRect","clientLeft","scrollLeft","getCursorPosition","selectionStart","selectionEnd","sort","a","b","getSelectedTextNodes","selection","getSelection","getRangeAt","startContainer","startOffset","endContainer","endOffset","direction","anchorNode","anchorOffset","nodeType","TEXT_NODE","childNodes","getLastChildNode","nodeValue","length","getFirstChildNode","makeAsyncQueueRunner","i","queue","f","j","shift","data","dataset","JSON","stringify","parse","createNode","div","document","createElement","innerHTML","html","trim","firstChild","nextNode","lastChild","CLONE_PROPERTIES","validateSuggestions","suggestions","map","suggestion","e","show","insertText","on","focusText","constructor","Array","insertHtml","focusHtml","escapeRegExp","string","replace","SuggestionList","options","values","caseSensitive","Boolean","getSuggestions","keyword","callback","call","flags","triggerRegex","trigger","commonRegex","matcher","RegExp","exactMatcher","filter","test","entry","escapedTrigger","regex","prototype","getMatch","match","SuggestionDropdown","width","isEmpty","isActive","dropdownContent","className","dropdown","position","hide","appendChild","body","offsetWidth","classList","remove","add","height","offsetHeight","display","onSet","empty","dropdownLink","addEventListener","getActive","preventDefault","stopPropagation","setActive","activeLinks","slice","querySelectorAll","pop","firstElementChild","activeLink","nextLink","nextElementSibling","prevLink","previousElementSibling","lastElementChild","splitValue","originalValue","cursorPosition","textAfterTrigger","split","textUptoTrigger","getCharHeight","elements","Math","max","POSITIONER_CHARACTER","getCaretPosition","clone","id","positioner","createTextNode","computed","prop","elementPosition","opacity","scrollHeight","parseInt","overflowY","overflow","charHeight","tagName","overflowX","whiteSpace","scrollWidth","clientWidth","min","paddingTop","paddingBottom","maxWidth","scrollTop","caretPosition","inputPosition","diff","removeChild","containerTextNode","parentNode","referenceNode","nextSibling","insertBefore","remainingTextNode","setBaseAndExtent","createRange","setStart","setEnd","removeAllRanges","addRange","getNextNode","root","removeNodesBetween","insertHtmlAfter","psuedoDom","appendedNodes","push","setValue","onChange","startPosition","endPosition","currentValue","focus","cursorStartPosition","setSelectionRange","preValue","replaceValue","remainingText","setSelection","nodes","method","lastNode","lastFocus","textContent","AutoSuggest","inputs","Function","maxSuggestions","suggestionLists","suggestionList","Object","hasOwnProperty","self","activeSuggestionList","handledInKeyDown","previousValue","onBlurHandler","onKeyDownHandler","preventDefaultAction","keyCode","getValue","bind","selectNext","selectPrev","keyUpIndex","onKeyUpHandler","charAt","executeQueue","timer","triggerMatchFound","asyncReference","clearTimeout","setTimeout","showLoader","results","fill","addInputs","args","apply","d","isContentEditable","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":"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"}